# This starter workflow is for a CMake project running on a single platform. There is a different starter workflow if you need cross-platform coverage.
# See: https://github.com/actions/starter-workflows/blob/main/ci/cmake-multi-platform.yml
name: CMake on a single platform

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest


    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up C++ environment
        uses: actions/setup-cpp@v1

      - name: Build and run tests
        run: |
          make
          exit_code=0
          for size in 4 6 8 10 12 14 16 18 20; do
            echo "Running tests for matrix size $size"
            echo "$size" | ./matrix_generator
            exit_code=$?
            if [[ $exit_code -ne 0 ]]; then
              echo "Program exited with non-zero code: $exit_code"
              exit 1
            fi
          done